{
  "test_scenarios": {
    "repository_filtering": [
      {
        "id": "RF-01",
        "name": "Filter to mcprag repository",
        "parameters": {
          "query": "FastMCP server implementation",
          "repository": "mcprag",
          "max_results": 5
        },
        "expected": {
          "all_results_from_repo": "mcprag",
          "min_results": 1,
          "should_contain_files": ["mcprag/server.py", "mcprag/mcp/"]
        }
      },
      {
        "id": "RF-02", 
        "name": "Filter to enhanced_rag repository",
        "parameters": {
          "query": "ranking algorithm",
          "repository": "enhanced_rag",
          "max_results": 5
        },
        "expected": {
          "all_results_from_repo": "enhanced_rag",
          "min_results": 1,
          "should_contain_files": ["enhanced_rag/ranking/"]
        }
      },
      {
        "id": "RF-03",
        "name": "Filter to tests repository", 
        "parameters": {
          "query": "test integration",
          "repository": "tests",
          "max_results": 5
        },
        "expected": {
          "all_results_from_repo": "tests",
          "min_results": 0,
          "should_contain_files": ["tests/"]
        }
      },
      {
        "id": "RF-04",
        "name": "Non-existent repository",
        "parameters": {
          "query": "any query",
          "repository": "nonexistent_repo",
          "max_results": 5
        },
        "expected": {
          "max_results": 0,
          "acceptable_error": true
        }
      },
      {
        "id": "RF-05",
        "name": "No repository filter",
        "parameters": {
          "query": "server",
          "max_results": 10
        },
        "expected": {
          "min_results": 5,
          "mixed_repositories": true,
          "should_include_repos": ["mcprag", "venv/lib"]
        }
      }
    ],
    "search_quality": [
      {
        "id": "SQ-01",
        "name": "Find MCPServer class definition",
        "parameters": {
          "query": "MCPServer class definition",
          "intent": "UNDERSTAND",
          "max_results": 5
        },
        "expected": {
          "top_result_should_contain": "class MCPServer",
          "relevance_threshold": 0.015,
          "should_contain_files": ["mcprag/server.py"]
        }
      },
      {
        "id": "SQ-02", 
        "name": "Find tool registration implementation",
        "parameters": {
          "query": "register_tools implementation",
          "intent": "IMPLEMENT", 
          "max_results": 5
        },
        "expected": {
          "top_result_should_contain": "def register_tools",
          "relevance_threshold": 0.015,
          "should_contain_files": ["mcprag/mcp/tools/__init__.py"]
        }
      },
      {
        "id": "SQ-03",
        "name": "Azure Search configuration debug",
        "parameters": {
          "query": "Azure Search configuration error",
          "intent": "DEBUG",
          "max_results": 5  
        },
        "expected": {
          "min_results": 1,
          "should_contain_terms": ["Azure", "Search", "config"],
          "relevance_threshold": 0.01
        }
      },
      {
        "id": "SQ-04",
        "name": "Find ranking algorithm tests",
        "parameters": {
          "query": "ranking algorithm test",
          "intent": "TEST",
          "max_results": 5
        },
        "expected": {
          "should_contain_files": ["tests/"],
          "should_contain_terms": ["test", "ranking"],
          "min_results": 1
        }
      },
      {
        "id": "SQ-05",
        "name": "Refactor tool registration patterns",
        "parameters": {
          "query": "refactor tool registration",
          "intent": "REFACTOR",
          "max_results": 5
        },
        "expected": {
          "should_contain_terms": ["register", "tool"],
          "multiple_files_expected": true,
          "min_results": 2
        }
      }
    ],
    "parameter_combinations": [
      {
        "id": "PC-01",
        "name": "BM25-only mode with high relevance",
        "parameters": {
          "query": "register_tools",
          "bm25_only": true,
          "max_results": 5
        },
        "expected": {
          "relevance_threshold": 1.0,
          "backend": "basic",
          "higher_scores_than_enhanced": true
        }
      },
      {
        "id": "PC-02",
        "name": "Exact terms matching",
        "parameters": {
          "query": "server configuration",
          "exact_terms": ["server"],
          "max_results": 5
        },
        "expected": {
          "applied_exact_terms": true,
          "all_results_contain": "server",
          "min_results": 1
        }
      },
      {
        "id": "PC-03", 
        "name": "Compact detail with snippet lines",
        "parameters": {
          "query": "class definition",
          "detail_level": "compact",
          "snippet_lines": 3,
          "max_results": 3
        },
        "expected": {
          "detail_level": "compact",
          "non_empty_headlines": true,
          "compact_format": true
        }
      },
      {
        "id": "PC-04",
        "name": "Include dependencies analysis",
        "parameters": {
          "query": "server initialization", 
          "include_dependencies": true,
          "max_results": 3
        },
        "expected": {
          "include_dependencies": true,
          "additional_context_expected": true,
          "min_results": 1
        }
      },
      {
        "id": "PC-05",
        "name": "Code highlighting enabled",
        "parameters": {
          "query": "FastMCP server",
          "highlight_code": true,
          "max_results": 3
        },
        "expected": {
          "highlight_code": true,
          "highlights_present": true,
          "min_results": 1
        }
      }
    ],
    "performance_tests": [
      {
        "id": "PF-01",
        "name": "Simple query performance",
        "parameters": {
          "query": "server",
          "max_results": 10
        },
        "expected": {
          "response_time_ms": 200,
          "min_results": 5
        }
      },
      {
        "id": "PF-02", 
        "name": "Complex query performance",
        "parameters": {
          "query": "Azure AI Search integration with FastMCP server",
          "max_results": 50
        },
        "expected": {
          "response_time_ms": 500,
          "min_results": 10
        }
      },
      {
        "id": "PF-03",
        "name": "Repository-filtered performance",
        "parameters": {
          "query": "search implementation", 
          "repository": "mcprag",
          "max_results": 20
        },
        "expected": {
          "response_time_ms": 300,
          "all_results_from_repo": "mcprag"
        }
      },
      {
        "id": "PF-04",
        "name": "BM25 vs Enhanced mode timing",
        "parameters": [
          {
            "query": "ranking algorithm",
            "bm25_only": false,
            "max_results": 10
          },
          {
            "query": "ranking algorithm", 
            "bm25_only": true,
            "max_results": 10
          }
        ],
        "expected": {
          "enhanced_time_ratio": 2.0,
          "both_return_results": true
        }
      }
    ],
    "edge_cases": [
      {
        "id": "EC-01",
        "name": "Empty query",
        "parameters": {
          "query": "",
          "max_results": 5
        },
        "expected": {
          "error_expected": true,
          "error_contains": "empty"
        }
      },
      {
        "id": "EC-02",
        "name": "Whitespace-only query", 
        "parameters": {
          "query": "   ",
          "max_results": 5
        },
        "expected": {
          "error_expected": true,
          "error_contains": "whitespace"
        }
      },
      {
        "id": "EC-03",
        "name": "Zero max results",
        "parameters": {
          "query": "test",
          "max_results": 0
        },
        "expected": {
          "result_count": 0,
          "no_error": true
        }
      },
      {
        "id": "EC-04", 
        "name": "Very large max results",
        "parameters": {
          "query": "python",
          "max_results": 1000
        },
        "expected": {
          "response_time_ms": 2000,
          "no_error": true,
          "reasonable_result_count": true
        }
      },
      {
        "id": "EC-05",
        "name": "Very long query",
        "parameters": {
          "query": "server implementation with Azure Search integration and FastMCP protocol handling including error management and response formatting with JSON schema validation and performance optimization for concurrent requests with caching and rate limiting mechanisms",
          "max_results": 10
        },
        "expected": {
          "no_error": true,
          "reasonable_results": true,
          "response_time_ms": 1000
        }
      },
      {
        "id": "EC-06",
        "name": "Special characters in query",
        "parameters": {
          "query": "class.__init__() @property def",
          "max_results": 5
        },
        "expected": {
          "no_error": true,
          "min_results": 0
        }
      },
      {
        "id": "EC-07",
        "name": "Unicode query",
        "parameters": {
          "query": "sérver configuração",
          "max_results": 5  
        },
        "expected": {
          "no_error": true,
          "result_count_acceptable": true
        }
      }
    ],
    "regression_tests": [
      {
        "id": "RT-01",
        "name": "Known good query baseline",
        "parameters": {
          "query": "register_tools function",
          "repository": "mcprag",
          "max_results": 5
        },
        "expected": {
          "top_result_file": "mcprag/mcp/tools/__init__.py",
          "relevance_threshold": 0.01,
          "stable_results": true
        }
      },
      {
        "id": "RT-02",
        "name": "BM25 mode stability",
        "parameters": {
          "query": "MCPServer class",
          "bm25_only": true,
          "max_results": 3
        },
        "expected": {
          "relevance_threshold": 15.0,
          "consistent_rankings": true,
          "backend": "basic"
        }
      },
      {
        "id": "RT-03", 
        "name": "Performance regression check",
        "parameters": {
          "query": "search code implementation",
          "max_results": 10
        },
        "expected": {
          "response_time_ms": 250,
          "no_performance_degradation": true
        }
      }
    ]
  },
  "validation_rules": {
    "response_structure": {
      "required_fields": ["ok", "data"],
      "data_fields": ["items", "count", "total", "took_ms", "query", "backend"],
      "item_fields": ["id", "file", "repository", "language", "content", "relevance"]
    },
    "performance_thresholds": {
      "fast_query_ms": 200,
      "standard_query_ms": 500, 
      "complex_query_ms": 1000,
      "timeout_ms": 5000
    },
    "quality_thresholds": {
      "min_enhanced_relevance": 0.01,
      "min_bm25_relevance": 1.0,
      "max_empty_content_rate": 0.1,
      "min_repository_filter_accuracy": 0.95
    }
  },
  "test_execution_order": [
    "edge_cases",
    "parameter_combinations", 
    "repository_filtering",
    "search_quality",
    "performance_tests",
    "regression_tests"
  ]
}