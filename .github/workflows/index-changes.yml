name: "GitHub API + Azure Search Integration"

on:
  push:
    paths:
      - "**/*.py"
      - "**/*.js"
      - "**/*.ts"
    branches:
      - main
      - develop
  pull_request:
    paths:
      - "**/*.py"
      - "**/*.js"
      - "**/*.ts"

jobs:
  index-local:
    name: "Local File Indexing"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect changed code files
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            code:
              - '**/*.py'
              - '**/*.js'
              - '**/*.ts'

      - name: Set up Python
        if: steps.changes.outputs.code == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up Node.js
        if: steps.changes.outputs.code == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        if: steps.changes.outputs.code == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm ci
          chmod +x parse_js.mjs

      - name: Index changed files (Local)
        if: steps.changes.outputs.code == 'true'
        env:
          ACS_ENDPOINT: ${{ secrets.ACS_ENDPOINT }}
          ACS_ADMIN_KEY: ${{ secrets.ACS_ADMIN_KEY }}
        run: |
          CHANGED_FILES=$(echo "${{ steps.changes.outputs.code_files }}" | tr '\n' ' ')
          echo "üìÅ Local indexing - Changed files: $CHANGED_FILES"

          if [ ! -z "$CHANGED_FILES" ]; then
            python smart_indexer.py --files $CHANGED_FILES --repo-name "${{ github.repository }}"
          fi

  index-remote:
    name: "GitHub API Remote Indexing"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests

      - name: Index via GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACS_ENDPOINT: ${{ secrets.ACS_ENDPOINT }}
          ACS_ADMIN_KEY: ${{ secrets.ACS_ADMIN_KEY }}
        run: |
          echo "üåê Remote indexing via GitHub API"

          # Extract owner and repo from GITHUB_REPOSITORY
          OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1)
          REPO=$(echo "${{ github.repository }}" | cut -d'/' -f2)

          # Get changed files using GitHub API
          if [ "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ]; then
            echo "üìä Comparing ${{ github.event.before }} to ${{ github.event.after }}"
            python -c "
from github_azure_integration import GitHubAzureIntegrator
integrator = GitHubAzureIntegrator()
files = integrator.get_changed_files_from_push('$OWNER', '$REPO', '${{ github.event.before }}', '${{ github.event.after }}')
if files:
    integrator.index_changed_files_remote('$OWNER', '$REPO', files)
    print(f'‚úÖ Indexed {len(files)} files via GitHub API')
else:
    print('‚ÑπÔ∏è No code files changed')
"
          else
            echo "üîÑ Initial commit - indexing entire repository"
            python -c "
from github_azure_integration import GitHubAzureIntegrator
integrator = GitHubAzureIntegrator()
integrator.index_remote_repository('$OWNER', '$REPO')
"
          fi

      - name: Report status
        run: |
          echo "‚úÖ GitHub API + Azure Search integration completed"
